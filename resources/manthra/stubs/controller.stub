<?php

namespace DummyNamespace;

use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;
use DummyRootNamespaceHttp\Controllers\Controller;

class DummyClass extends Controller
{
    public function index(Request $request)
    {
        $keyword = $request->get('search');
        $perPage = {{pagination}};

        ${{crudName}} = {{modelName}}::{{whereSnippet}}->paginate($perPage);

        return view('{{viewPath}}{{viewName}}.index', compact('{{crudName}}'));
    }

    public function create()
    {
        return view('{{viewPath}}{{viewName}}.create');
    }

    public function store(Request $request)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        {{modelName}}::create($requestData);

	    noty()->success('✅', 'Data has been added successfully');
        return redirect('{{routeGroup}}{{viewName}}');
    }

    public function show($id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
    }

    public function edit($id)
    {
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
    }

    public function update($id, Request $request)
    {
        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        ${{crudNameSingular}}->update($requestData);

	    noty()->success('✅', 'Data has been updated successfully');
        return redirect('{{routeGroup}}{{viewName}}');
    }

    public function destroy($id)
    {
        {{modelName}}::destroy($id);

	    noty()->error('✅', 'Data has been deleted successfully');
        return redirect('{{routeGroup}}{{viewName}}');
    }
}
